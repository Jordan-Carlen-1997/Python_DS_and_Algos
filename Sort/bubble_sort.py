# -*- coding: utf-8 -*-
"""Template.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1vvFqGHdVDDfbWG9oDEgti3hVJDrymJrU
"""

import random as rd

#Bubble sort, sometimes referred to as sinking sort, is a simple sorting algorithm 
#that repeatedly steps through the list, compares adjacent elements and swaps them if 
#they are in the wrong order. The pass through the list is repeated until the list is sorted.

def bubble_sort(target):
    
    #For each round n, we find the nth largest number
    #So we apply descending order on range function
    #Remember that range function always includes the first variable and ignore the last
    #We use len(target) instead of len(target)-1
    for i in range(len(target),0,-1):
        
        #given n, we go through n items in the list
        #compare then swap
        #we are using j-1 below, so we start at 1
        #prior to len(target) above, we can place i at the end of range function
        for j in range(1,i):
            
            #if the item is larger than the one before it
            #we do a simultaneous swap
            if target[j]<target[j-1]:
                target[j],target[j-1]=target[j-1],target[j]
                
    return target
        
for i in range(100):
    
    target=rd.sample([i for i in range(1000)],100)

    if bubble_sort(target)!=sorted(target):
        print('Error')